#Which DB to use
local.run.db=H2
#local.run.db=POSTGRESQL
#local.run.db=ORACLE
#etc,. mongoDB requires different config, go to documentation

spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=true

#either use default PORT set on an enviornment variable or use 2019
server.port=${PORT:2019}

#converts to json
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

#this can be a securit risk, this is good for now for this practice project
#this line is saying keep connection open until app is ready with all the data that it needs
spring.jpa.open-in-view=true

#tell hibernate, everytime the application is run, re-create the database
spring.jpa.hibernate.ddl-auto=update

#make sure that if there is  test data to always load it.
spring.datasource.initialization-mode=never
command.line.runner.enabled=false

spring.jackson.date-format=yyy-MM-dd HH:mm:ss

#spring.jackson.time-zone=America/Orlando

#Turn off Spring boot exception handling, however if the exception isnt covered spring will still take care of it
server.error.whitelabel.enabled = false

#if client goes to a route that doesnt exist I will handle the exception
spring.mvc.throw-exception-if-no-handler-found=true

#turn off default routes that come with spring
spring.resources.add-mappings=false

spring.jpa.defer-datasource-initialization=true

#Problem:
#Heroku restarts application once every 24 hours. It does this automatically; you have no control over it. This is a good thing and is similar to my mantra of restart your computer at least once a day!
#However, if you leave your code as originally deployed (with creating the database turned on seeddata active), when Heroku restarts your application, any data changes made in the last 24 hours get wiped out. So much for presient data.
#Solution (beta):
#Here is a solution. Clunky but works.
#Deploy your application as normal using postgresql
#When you first deploy your application, in application.properties, you have the following set
#spring.jpa.hibernate.ddl-auto=create
#spring.datasource.initialization-mode=always
#And you may have a SeedData class.
#Make sure your application is running properly.
#Now redeploy the same application but with the following changes:
#in application.properties
#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.initialization-mode=never
#command.line.runner.enabled=false
#So, now when your application is restarted by Heroku, seed data is not active and you can keep your old data!

